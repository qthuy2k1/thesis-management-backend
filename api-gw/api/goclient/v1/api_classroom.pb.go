// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: api_classroom.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonClassroomResponse) Reset() {
	*x = CommonClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonClassroomResponse) ProtoMessage() {}

func (x *CommonClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonClassroomResponse.ProtoReflect.Descriptor instead.
func (*CommonClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{0}
}

func (x *CommonClassroomResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CommonClassroomResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ====== POST ======
type ClassroomInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	LecturerId    string `protobuf:"bytes,4,opt,name=lecturerId,proto3" json:"lecturerId,omitempty"`
	CodeClassroom string `protobuf:"bytes,5,opt,name=codeClassroom,proto3" json:"codeClassroom,omitempty"`
	TopicTags     string `protobuf:"bytes,6,opt,name=topicTags,proto3" json:"topicTags,omitempty"`
	Quantity      int32  `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ClassroomInput) Reset() {
	*x = ClassroomInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassroomInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassroomInput) ProtoMessage() {}

func (x *ClassroomInput) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassroomInput.ProtoReflect.Descriptor instead.
func (*ClassroomInput) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{1}
}

func (x *ClassroomInput) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClassroomInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClassroomInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClassroomInput) GetLecturerId() string {
	if x != nil {
		return x.LecturerId
	}
	return ""
}

func (x *ClassroomInput) GetCodeClassroom() string {
	if x != nil {
		return x.CodeClassroom
	}
	return ""
}

func (x *ClassroomInput) GetTopicTags() string {
	if x != nil {
		return x.TopicTags
	}
	return ""
}

func (x *ClassroomInput) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReportingStageClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReportingStageClassroomResponse) Reset() {
	*x = ReportingStageClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportingStageClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportingStageClassroomResponse) ProtoMessage() {}

func (x *ReportingStageClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportingStageClassroomResponse.ProtoReflect.Descriptor instead.
func (*ReportingStageClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{2}
}

func (x *ReportingStageClassroomResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReportingStageClassroomResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportingStageClassroomResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AuthorClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Class       string  `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	Major       *string `protobuf:"bytes,3,opt,name=major,proto3,oneof" json:"major,omitempty"`
	Phone       *string `protobuf:"bytes,4,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	PhotoSrc    string  `protobuf:"bytes,5,opt,name=photoSrc,proto3" json:"photoSrc,omitempty"`
	Role        string  `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	Name        string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Email       string  `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	ClassroomID *string `protobuf:"bytes,9,opt,name=classroomID,proto3,oneof" json:"classroomID,omitempty"`
}

func (x *AuthorClassroomResponse) Reset() {
	*x = AuthorClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorClassroomResponse) ProtoMessage() {}

func (x *AuthorClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorClassroomResponse.ProtoReflect.Descriptor instead.
func (*AuthorClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorClassroomResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthorClassroomResponse) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *AuthorClassroomResponse) GetMajor() string {
	if x != nil && x.Major != nil {
		return *x.Major
	}
	return ""
}

func (x *AuthorClassroomResponse) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *AuthorClassroomResponse) GetPhotoSrc() string {
	if x != nil {
		return x.PhotoSrc
	}
	return ""
}

func (x *AuthorClassroomResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AuthorClassroomResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthorClassroomResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthorClassroomResponse) GetClassroomID() string {
	if x != nil && x.ClassroomID != nil {
		return *x.ClassroomID
	}
	return ""
}

type ClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string                          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description       string                          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status            string                          `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Lecturer          *AuthorClassroomResponse        `protobuf:"bytes,5,opt,name=lecturer,proto3" json:"lecturer,omitempty"`
	CodeClassroom     string                          `protobuf:"bytes,6,opt,name=codeClassroom,proto3" json:"codeClassroom,omitempty"`
	TopicTags         string                          `protobuf:"bytes,7,opt,name=topicTags,proto3" json:"topicTags,omitempty"`
	Quantity          int32                           `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt         *timestamp.Timestamp            `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         *timestamp.Timestamp            `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	PostsAndExercises []*PostsAndExercisesOfClassroom `protobuf:"bytes,11,rep,name=postsAndExercises,proto3" json:"postsAndExercises,omitempty"`
}

func (x *ClassroomResponse) Reset() {
	*x = ClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassroomResponse) ProtoMessage() {}

func (x *ClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassroomResponse.ProtoReflect.Descriptor instead.
func (*ClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{4}
}

func (x *ClassroomResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClassroomResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClassroomResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClassroomResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClassroomResponse) GetLecturer() *AuthorClassroomResponse {
	if x != nil {
		return x.Lecturer
	}
	return nil
}

func (x *ClassroomResponse) GetCodeClassroom() string {
	if x != nil {
		return x.CodeClassroom
	}
	return ""
}

func (x *ClassroomResponse) GetTopicTags() string {
	if x != nil {
		return x.TopicTags
	}
	return ""
}

func (x *ClassroomResponse) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ClassroomResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ClassroomResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ClassroomResponse) GetPostsAndExercises() []*PostsAndExercisesOfClassroom {
	if x != nil {
		return x.PostsAndExercises
	}
	return nil
}

type PostsAndExercisesOfClassroom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content        string                           `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ClassroomID    int32                            `protobuf:"varint,4,opt,name=classroomID,proto3" json:"classroomID,omitempty"`
	Deadline       *datetime.DateTime               `protobuf:"bytes,5,opt,name=deadline,proto3,oneof" json:"deadline,omitempty"`
	Score          *int32                           `protobuf:"varint,6,opt,name=score,proto3,oneof" json:"score,omitempty"`
	ReportingStage *ReportingStageClassroomResponse `protobuf:"bytes,7,opt,name=reportingStage,proto3" json:"reportingStage,omitempty"`
	Author         *AuthorClassroomResponse         `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	CreatedAt      *timestamp.Timestamp             `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamp.Timestamp             `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Type           string                           `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PostsAndExercisesOfClassroom) Reset() {
	*x = PostsAndExercisesOfClassroom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsAndExercisesOfClassroom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsAndExercisesOfClassroom) ProtoMessage() {}

func (x *PostsAndExercisesOfClassroom) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsAndExercisesOfClassroom.ProtoReflect.Descriptor instead.
func (*PostsAndExercisesOfClassroom) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{5}
}

func (x *PostsAndExercisesOfClassroom) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostsAndExercisesOfClassroom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostsAndExercisesOfClassroom) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostsAndExercisesOfClassroom) GetClassroomID() int32 {
	if x != nil {
		return x.ClassroomID
	}
	return 0
}

func (x *PostsAndExercisesOfClassroom) GetDeadline() *datetime.DateTime {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *PostsAndExercisesOfClassroom) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *PostsAndExercisesOfClassroom) GetReportingStage() *ReportingStageClassroomResponse {
	if x != nil {
		return x.ReportingStage
	}
	return nil
}

func (x *PostsAndExercisesOfClassroom) GetAuthor() *AuthorClassroomResponse {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PostsAndExercisesOfClassroom) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PostsAndExercisesOfClassroom) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PostsAndExercisesOfClassroom) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateClassroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classroom *ClassroomInput `protobuf:"bytes,1,opt,name=classroom,proto3" json:"classroom,omitempty"`
}

func (x *CreateClassroomRequest) Reset() {
	*x = CreateClassroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClassroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClassroomRequest) ProtoMessage() {}

func (x *CreateClassroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClassroomRequest.ProtoReflect.Descriptor instead.
func (*CreateClassroomRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{6}
}

func (x *CreateClassroomRequest) GetClassroom() *ClassroomInput {
	if x != nil {
		return x.Classroom
	}
	return nil
}

type CreateClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CommonClassroomResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateClassroomResponse) Reset() {
	*x = CreateClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClassroomResponse) ProtoMessage() {}

func (x *CreateClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClassroomResponse.ProtoReflect.Descriptor instead.
func (*CreateClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{7}
}

func (x *CreateClassroomResponse) GetResponse() *CommonClassroomResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// ====== GET ======
type GetClassroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleSearch string `protobuf:"bytes,2,opt,name=titleSearch,proto3" json:"titleSearch,omitempty"`
	SortColumn  string `protobuf:"bytes,3,opt,name=sortColumn,proto3" json:"sortColumn,omitempty"`
}

func (x *GetClassroomRequest) Reset() {
	*x = GetClassroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassroomRequest) ProtoMessage() {}

func (x *GetClassroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassroomRequest.ProtoReflect.Descriptor instead.
func (*GetClassroomRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{8}
}

func (x *GetClassroomRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetClassroomRequest) GetTitleSearch() string {
	if x != nil {
		return x.TitleSearch
	}
	return ""
}

func (x *GetClassroomRequest) GetSortColumn() string {
	if x != nil {
		return x.SortColumn
	}
	return ""
}

type GetClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  *CommonClassroomResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Classroom *ClassroomResponse       `protobuf:"bytes,2,opt,name=classroom,proto3" json:"classroom,omitempty"`
}

func (x *GetClassroomResponse) Reset() {
	*x = GetClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassroomResponse) ProtoMessage() {}

func (x *GetClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassroomResponse.ProtoReflect.Descriptor instead.
func (*GetClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{9}
}

func (x *GetClassroomResponse) GetResponse() *CommonClassroomResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetClassroomResponse) GetClassroom() *ClassroomResponse {
	if x != nil {
		return x.Classroom
	}
	return nil
}

type CheckClassroomExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassroomID int32 `protobuf:"varint,1,opt,name=classroomID,proto3" json:"classroomID,omitempty"`
}

func (x *CheckClassroomExistsRequest) Reset() {
	*x = CheckClassroomExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckClassroomExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckClassroomExistsRequest) ProtoMessage() {}

func (x *CheckClassroomExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckClassroomExistsRequest.ProtoReflect.Descriptor instead.
func (*CheckClassroomExistsRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{10}
}

func (x *CheckClassroomExistsRequest) GetClassroomID() int32 {
	if x != nil {
		return x.ClassroomID
	}
	return 0
}

type CheckClassroomExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *CheckClassroomExistsResponse) Reset() {
	*x = CheckClassroomExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckClassroomExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckClassroomExistsResponse) ProtoMessage() {}

func (x *CheckClassroomExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckClassroomExistsResponse.ProtoReflect.Descriptor instead.
func (*CheckClassroomExistsResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{11}
}

func (x *CheckClassroomExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// ====== PUT ======
type UpdateClassroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Classroom *ClassroomInput `protobuf:"bytes,2,opt,name=classroom,proto3" json:"classroom,omitempty"`
}

func (x *UpdateClassroomRequest) Reset() {
	*x = UpdateClassroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClassroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassroomRequest) ProtoMessage() {}

func (x *UpdateClassroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassroomRequest.ProtoReflect.Descriptor instead.
func (*UpdateClassroomRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateClassroomRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateClassroomRequest) GetClassroom() *ClassroomInput {
	if x != nil {
		return x.Classroom
	}
	return nil
}

type UpdateClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CommonClassroomResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateClassroomResponse) Reset() {
	*x = UpdateClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassroomResponse) ProtoMessage() {}

func (x *UpdateClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassroomResponse.ProtoReflect.Descriptor instead.
func (*UpdateClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateClassroomResponse) GetResponse() *CommonClassroomResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// ====== DELETE ======
type DeleteClassroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteClassroomRequest) Reset() {
	*x = DeleteClassroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClassroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClassroomRequest) ProtoMessage() {}

func (x *DeleteClassroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClassroomRequest.ProtoReflect.Descriptor instead.
func (*DeleteClassroomRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteClassroomRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteClassroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CommonClassroomResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteClassroomResponse) Reset() {
	*x = DeleteClassroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClassroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClassroomResponse) ProtoMessage() {}

func (x *DeleteClassroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClassroomResponse.ProtoReflect.Descriptor instead.
func (*DeleteClassroomResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteClassroomResponse) GetResponse() *CommonClassroomResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// ====== GET ALL ======
type GetClassroomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit       int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	TitleSearch string `protobuf:"bytes,3,opt,name=titleSearch,proto3" json:"titleSearch,omitempty"`
	SortColumn  string `protobuf:"bytes,4,opt,name=sortColumn,proto3" json:"sortColumn,omitempty"`
	IsDesc      bool   `protobuf:"varint,5,opt,name=isDesc,proto3" json:"isDesc,omitempty"`
}

func (x *GetClassroomsRequest) Reset() {
	*x = GetClassroomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassroomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassroomsRequest) ProtoMessage() {}

func (x *GetClassroomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassroomsRequest.ProtoReflect.Descriptor instead.
func (*GetClassroomsRequest) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{16}
}

func (x *GetClassroomsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetClassroomsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetClassroomsRequest) GetTitleSearch() string {
	if x != nil {
		return x.TitleSearch
	}
	return ""
}

func (x *GetClassroomsRequest) GetSortColumn() string {
	if x != nil {
		return x.SortColumn
	}
	return ""
}

func (x *GetClassroomsRequest) GetIsDesc() bool {
	if x != nil {
		return x.IsDesc
	}
	return false
}

type GetClassroomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *CommonClassroomResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	TotalCount int32                    `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Classrooms []*ClassroomResponse     `protobuf:"bytes,3,rep,name=classrooms,proto3" json:"classrooms,omitempty"`
}

func (x *GetClassroomsResponse) Reset() {
	*x = GetClassroomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_classroom_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassroomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassroomsResponse) ProtoMessage() {}

func (x *GetClassroomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_classroom_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassroomsResponse.ProtoReflect.Descriptor instead.
func (*GetClassroomsResponse) Descriptor() ([]byte, []int) {
	return file_api_classroom_proto_rawDescGZIP(), []int{17}
}

func (x *GetClassroomsResponse) GetResponse() *CommonClassroomResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetClassroomsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetClassroomsResponse) GetClassrooms() []*ClassroomResponse {
	if x != nil {
		return x.Classrooms
	}
	return nil
}

var File_api_classroom_proto protoreflect.FileDescriptor

var file_api_classroom_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x28, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x99, 0x02, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0xc8, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x02, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x25, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x28, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x82, 0x01,
	0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xee, 0x02, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x04, 0x18, 0x0a, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0b, 0x48, 0x01, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x53, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x53, 0x72, 0x63, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0xfa, 0x42, 0x1b, 0x72, 0x19, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02,
	0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60,
	0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x22, 0xc2, 0x04, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x45, 0x0a, 0x08, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x25, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x41, 0x6e,
	0x64, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x4f, 0x66, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x22, 0xeb, 0x04, 0x0a, 0x1c, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x4f, 0x66,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x28, 0x00, 0x48, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x59,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x42, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x15, 0xfa, 0x42, 0x12, 0x72, 0x10, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x52,
	0x08, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x6a, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x22,
	0x48, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x1c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x7b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x6a,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x22, 0xd6, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x32,
	0x94, 0x06, 0x0a, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x7a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x83, 0x01,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x77, 0x0a,
	0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x74, 0x68, 0x75, 0x79, 0x32, 0x6b, 0x31, 0x2f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_classroom_proto_rawDescOnce sync.Once
	file_api_classroom_proto_rawDescData = file_api_classroom_proto_rawDesc
)

func file_api_classroom_proto_rawDescGZIP() []byte {
	file_api_classroom_proto_rawDescOnce.Do(func() {
		file_api_classroom_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_classroom_proto_rawDescData)
	})
	return file_api_classroom_proto_rawDescData
}

var file_api_classroom_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_classroom_proto_goTypes = []interface{}{
	(*CommonClassroomResponse)(nil),         // 0: api.classroom.v1.CommonClassroomResponse
	(*ClassroomInput)(nil),                  // 1: api.classroom.v1.ClassroomInput
	(*ReportingStageClassroomResponse)(nil), // 2: api.classroom.v1.ReportingStageClassroomResponse
	(*AuthorClassroomResponse)(nil),         // 3: api.classroom.v1.AuthorClassroomResponse
	(*ClassroomResponse)(nil),               // 4: api.classroom.v1.ClassroomResponse
	(*PostsAndExercisesOfClassroom)(nil),    // 5: api.classroom.v1.PostsAndExercisesOfClassroom
	(*CreateClassroomRequest)(nil),          // 6: api.classroom.v1.CreateClassroomRequest
	(*CreateClassroomResponse)(nil),         // 7: api.classroom.v1.CreateClassroomResponse
	(*GetClassroomRequest)(nil),             // 8: api.classroom.v1.GetClassroomRequest
	(*GetClassroomResponse)(nil),            // 9: api.classroom.v1.GetClassroomResponse
	(*CheckClassroomExistsRequest)(nil),     // 10: api.classroom.v1.CheckClassroomExistsRequest
	(*CheckClassroomExistsResponse)(nil),    // 11: api.classroom.v1.CheckClassroomExistsResponse
	(*UpdateClassroomRequest)(nil),          // 12: api.classroom.v1.UpdateClassroomRequest
	(*UpdateClassroomResponse)(nil),         // 13: api.classroom.v1.UpdateClassroomResponse
	(*DeleteClassroomRequest)(nil),          // 14: api.classroom.v1.DeleteClassroomRequest
	(*DeleteClassroomResponse)(nil),         // 15: api.classroom.v1.DeleteClassroomResponse
	(*GetClassroomsRequest)(nil),            // 16: api.classroom.v1.GetClassroomsRequest
	(*GetClassroomsResponse)(nil),           // 17: api.classroom.v1.GetClassroomsResponse
	(*timestamp.Timestamp)(nil),             // 18: google.protobuf.Timestamp
	(*datetime.DateTime)(nil),               // 19: google.type.DateTime
}
var file_api_classroom_proto_depIdxs = []int32{
	3,  // 0: api.classroom.v1.ClassroomResponse.lecturer:type_name -> api.classroom.v1.AuthorClassroomResponse
	18, // 1: api.classroom.v1.ClassroomResponse.createdAt:type_name -> google.protobuf.Timestamp
	18, // 2: api.classroom.v1.ClassroomResponse.updatedAt:type_name -> google.protobuf.Timestamp
	5,  // 3: api.classroom.v1.ClassroomResponse.postsAndExercises:type_name -> api.classroom.v1.PostsAndExercisesOfClassroom
	19, // 4: api.classroom.v1.PostsAndExercisesOfClassroom.deadline:type_name -> google.type.DateTime
	2,  // 5: api.classroom.v1.PostsAndExercisesOfClassroom.reportingStage:type_name -> api.classroom.v1.ReportingStageClassroomResponse
	3,  // 6: api.classroom.v1.PostsAndExercisesOfClassroom.author:type_name -> api.classroom.v1.AuthorClassroomResponse
	18, // 7: api.classroom.v1.PostsAndExercisesOfClassroom.createdAt:type_name -> google.protobuf.Timestamp
	18, // 8: api.classroom.v1.PostsAndExercisesOfClassroom.updatedAt:type_name -> google.protobuf.Timestamp
	1,  // 9: api.classroom.v1.CreateClassroomRequest.classroom:type_name -> api.classroom.v1.ClassroomInput
	0,  // 10: api.classroom.v1.CreateClassroomResponse.response:type_name -> api.classroom.v1.CommonClassroomResponse
	0,  // 11: api.classroom.v1.GetClassroomResponse.response:type_name -> api.classroom.v1.CommonClassroomResponse
	4,  // 12: api.classroom.v1.GetClassroomResponse.classroom:type_name -> api.classroom.v1.ClassroomResponse
	1,  // 13: api.classroom.v1.UpdateClassroomRequest.classroom:type_name -> api.classroom.v1.ClassroomInput
	0,  // 14: api.classroom.v1.UpdateClassroomResponse.response:type_name -> api.classroom.v1.CommonClassroomResponse
	0,  // 15: api.classroom.v1.DeleteClassroomResponse.response:type_name -> api.classroom.v1.CommonClassroomResponse
	0,  // 16: api.classroom.v1.GetClassroomsResponse.response:type_name -> api.classroom.v1.CommonClassroomResponse
	4,  // 17: api.classroom.v1.GetClassroomsResponse.classrooms:type_name -> api.classroom.v1.ClassroomResponse
	6,  // 18: api.classroom.v1.ClassroomService.CreateClassroom:input_type -> api.classroom.v1.CreateClassroomRequest
	8,  // 19: api.classroom.v1.ClassroomService.GetClassroom:input_type -> api.classroom.v1.GetClassroomRequest
	12, // 20: api.classroom.v1.ClassroomService.UpdateClassroom:input_type -> api.classroom.v1.UpdateClassroomRequest
	14, // 21: api.classroom.v1.ClassroomService.DeleteClassroom:input_type -> api.classroom.v1.DeleteClassroomRequest
	16, // 22: api.classroom.v1.ClassroomService.GetClassrooms:input_type -> api.classroom.v1.GetClassroomsRequest
	10, // 23: api.classroom.v1.ClassroomService.CheckClassroomExists:input_type -> api.classroom.v1.CheckClassroomExistsRequest
	7,  // 24: api.classroom.v1.ClassroomService.CreateClassroom:output_type -> api.classroom.v1.CreateClassroomResponse
	9,  // 25: api.classroom.v1.ClassroomService.GetClassroom:output_type -> api.classroom.v1.GetClassroomResponse
	13, // 26: api.classroom.v1.ClassroomService.UpdateClassroom:output_type -> api.classroom.v1.UpdateClassroomResponse
	15, // 27: api.classroom.v1.ClassroomService.DeleteClassroom:output_type -> api.classroom.v1.DeleteClassroomResponse
	17, // 28: api.classroom.v1.ClassroomService.GetClassrooms:output_type -> api.classroom.v1.GetClassroomsResponse
	11, // 29: api.classroom.v1.ClassroomService.CheckClassroomExists:output_type -> api.classroom.v1.CheckClassroomExistsResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_classroom_proto_init() }
func file_api_classroom_proto_init() {
	if File_api_classroom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_classroom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassroomInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportingStageClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsAndExercisesOfClassroom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClassroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckClassroomExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckClassroomExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClassroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClassroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClassroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassroomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_classroom_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassroomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_classroom_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_api_classroom_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_classroom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_classroom_proto_goTypes,
		DependencyIndexes: file_api_classroom_proto_depIdxs,
		MessageInfos:      file_api_classroom_proto_msgTypes,
	}.Build()
	File_api_classroom_proto = out.File
	file_api_classroom_proto_rawDesc = nil
	file_api_classroom_proto_goTypes = nil
	file_api_classroom_proto_depIdxs = nil
}
