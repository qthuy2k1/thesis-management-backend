{
  "swagger": "2.0",
  "info": {
    "title": "api_submission.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SubmissionService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/submit": {
      "post": {
        "operationId": "SubmissionService_CreateSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSubmissionRequest"
            }
          }
        ],
        "tags": [
          "SubmissionService"
        ]
      }
    },
    "/api/submit/ex/{exerciseID}": {
      "get": {
        "operationId": "SubmissionService_GetAllSubmissionsOfExercise",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllSubmissionsOfExerciseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exerciseID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SubmissionService"
        ]
      }
    },
    "/api/submit/{id}": {
      "get": {
        "operationId": "SubmissionService_GetSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "studentID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SubmissionService"
        ]
      },
      "delete": {
        "operationId": "SubmissionService_DeleteSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SubmissionService"
        ]
      },
      "put": {
        "operationId": "SubmissionService_UpdateSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "submission": {
                  "$ref": "#/definitions/v1SubmissionInput"
                }
              },
              "title": "====== PUT ======"
            }
          }
        ],
        "tags": [
          "SubmissionService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeDateTime": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a\ndatetime without a year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Month of year. Must be from 1 to 12."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and\nmonth."
        },
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API\nmay choose to allow the value \"24:00:00\" for scenarios like business\nclosing time."
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Minutes of hour of day. Must be from 0 to 59."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An\nAPI may allow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to\n999,999,999."
        },
        "utcOffset": {
          "type": "string",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours.\nFor example, a UTC offset of -4:00 would be represented as\n{ seconds: -14400 }."
        },
        "timeZone": {
          "$ref": "#/definitions/typeTimeZone",
          "description": "Time zone."
        }
      },
      "description": "Represents civil time (or occasionally physical time).\n\nThis type can represent a civil time in one of a few possible ways:\n\n * When utc_offset is set and time_zone is unset: a civil time on a calendar\n   day with a particular offset from UTC.\n * When time_zone is set and utc_offset is unset: a civil time on a calendar\n   day in a particular time zone.\n * When neither time_zone nor utc_offset is set: a civil time on a calendar\n   day in local time.\n\nThe date is relative to the Proleptic Gregorian Calendar.\n\nIf year is 0, the DateTime is considered not to have a specific year. month\nand day must have valid, non-zero values.\n\nThis type may also be used to represent a physical time if all the date and\ntime fields are set and either case of the `time_offset` oneof is set.\nConsider using `Timestamp` message for physical time instead. If your use\ncase also would like to store the user's timezone, that can be done in\nanother field.\n\nThis type is more flexible than some applications may want. Make sure to\ndocument and validate your application's limitations."
    },
    "typeTimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "v1AttachmentSubmissionInput": {
      "type": "object",
      "properties": {
        "fileURL": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "submissionID": {
          "type": "string",
          "format": "int64"
        },
        "exerciseID": {
          "type": "string",
          "format": "int64"
        },
        "authorID": {
          "type": "string"
        }
      }
    },
    "v1AttachmentSubmissionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "fileURL": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1CommonSubmissionResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1CreateSubmissionRequest": {
      "type": "object",
      "properties": {
        "submission": {
          "$ref": "#/definitions/v1SubmissionInput"
        }
      }
    },
    "v1CreateSubmissionResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1CommonSubmissionResponse"
        }
      }
    },
    "v1DeleteSubmissionResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1CommonSubmissionResponse"
        }
      }
    },
    "v1GetAllSubmissionsOfExerciseResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1CommonSubmissionResponse"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubmissionResponse"
          }
        }
      }
    },
    "v1GetSubmissionResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1CommonSubmissionResponse"
        },
        "submission": {
          "$ref": "#/definitions/v1SubmissionResponse"
        }
      }
    },
    "v1SubmissionInput": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "exerciseID": {
          "type": "string",
          "format": "int64"
        },
        "submissionDate": {
          "$ref": "#/definitions/typeDateTime"
        },
        "status": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AttachmentSubmissionInput"
          }
        }
      },
      "title": "====== submission ======"
    },
    "v1SubmissionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userID": {
          "type": "string"
        },
        "exerciseID": {
          "type": "string",
          "format": "int64"
        },
        "submissionDate": {
          "$ref": "#/definitions/typeDateTime"
        },
        "status": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AttachmentSubmissionResponse"
          }
        }
      }
    },
    "v1UpdateSubmissionResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1CommonSubmissionResponse"
        }
      }
    }
  }
}
