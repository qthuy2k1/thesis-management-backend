// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: api_student_def.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	StudentDefService_CreateStudentDef_FullMethodName              = "/api.studentDef.v1.StudentDefService/CreateStudentDef"
	StudentDefService_GetStudentDef_FullMethodName                 = "/api.studentDef.v1.StudentDefService/GetStudentDef"
	StudentDefService_UpdateStudentDef_FullMethodName              = "/api.studentDef.v1.StudentDefService/UpdateStudentDef"
	StudentDefService_DeleteStudentDef_FullMethodName              = "/api.studentDef.v1.StudentDefService/DeleteStudentDef"
	StudentDefService_GetStudentDefs_FullMethodName                = "/api.studentDef.v1.StudentDefService/GetStudentDefs"
	StudentDefService_GetAllStudentDefsOfInstructor_FullMethodName = "/api.studentDef.v1.StudentDefService/GetAllStudentDefsOfInstructor"
)

// StudentDefServiceClient is the client API for StudentDefService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudentDefServiceClient interface {
	CreateStudentDef(ctx context.Context, in *CreateStudentDefRequest, opts ...grpc.CallOption) (*CreateStudentDefResponse, error)
	GetStudentDef(ctx context.Context, in *GetStudentDefRequest, opts ...grpc.CallOption) (*GetStudentDefResponse, error)
	UpdateStudentDef(ctx context.Context, in *UpdateStudentDefRequest, opts ...grpc.CallOption) (*UpdateStudentDefResponse, error)
	DeleteStudentDef(ctx context.Context, in *DeleteStudentDefRequest, opts ...grpc.CallOption) (*DeleteStudentDefResponse, error)
	GetStudentDefs(ctx context.Context, in *GetStudentDefsRequest, opts ...grpc.CallOption) (*GetStudentDefsResponse, error)
	GetAllStudentDefsOfInstructor(ctx context.Context, in *GetAllStudentDefsOfInstructorRequest, opts ...grpc.CallOption) (*GetAllStudentDefsOfInstructorResponse, error)
}

type studentDefServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentDefServiceClient(cc grpc.ClientConnInterface) StudentDefServiceClient {
	return &studentDefServiceClient{cc}
}

func (c *studentDefServiceClient) CreateStudentDef(ctx context.Context, in *CreateStudentDefRequest, opts ...grpc.CallOption) (*CreateStudentDefResponse, error) {
	out := new(CreateStudentDefResponse)
	err := c.cc.Invoke(ctx, StudentDefService_CreateStudentDef_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentDefServiceClient) GetStudentDef(ctx context.Context, in *GetStudentDefRequest, opts ...grpc.CallOption) (*GetStudentDefResponse, error) {
	out := new(GetStudentDefResponse)
	err := c.cc.Invoke(ctx, StudentDefService_GetStudentDef_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentDefServiceClient) UpdateStudentDef(ctx context.Context, in *UpdateStudentDefRequest, opts ...grpc.CallOption) (*UpdateStudentDefResponse, error) {
	out := new(UpdateStudentDefResponse)
	err := c.cc.Invoke(ctx, StudentDefService_UpdateStudentDef_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentDefServiceClient) DeleteStudentDef(ctx context.Context, in *DeleteStudentDefRequest, opts ...grpc.CallOption) (*DeleteStudentDefResponse, error) {
	out := new(DeleteStudentDefResponse)
	err := c.cc.Invoke(ctx, StudentDefService_DeleteStudentDef_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentDefServiceClient) GetStudentDefs(ctx context.Context, in *GetStudentDefsRequest, opts ...grpc.CallOption) (*GetStudentDefsResponse, error) {
	out := new(GetStudentDefsResponse)
	err := c.cc.Invoke(ctx, StudentDefService_GetStudentDefs_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentDefServiceClient) GetAllStudentDefsOfInstructor(ctx context.Context, in *GetAllStudentDefsOfInstructorRequest, opts ...grpc.CallOption) (*GetAllStudentDefsOfInstructorResponse, error) {
	out := new(GetAllStudentDefsOfInstructorResponse)
	err := c.cc.Invoke(ctx, StudentDefService_GetAllStudentDefsOfInstructor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentDefServiceServer is the server API for StudentDefService service.
// All implementations must embed UnimplementedStudentDefServiceServer
// for forward compatibility
type StudentDefServiceServer interface {
	CreateStudentDef(context.Context, *CreateStudentDefRequest) (*CreateStudentDefResponse, error)
	GetStudentDef(context.Context, *GetStudentDefRequest) (*GetStudentDefResponse, error)
	UpdateStudentDef(context.Context, *UpdateStudentDefRequest) (*UpdateStudentDefResponse, error)
	DeleteStudentDef(context.Context, *DeleteStudentDefRequest) (*DeleteStudentDefResponse, error)
	GetStudentDefs(context.Context, *GetStudentDefsRequest) (*GetStudentDefsResponse, error)
	GetAllStudentDefsOfInstructor(context.Context, *GetAllStudentDefsOfInstructorRequest) (*GetAllStudentDefsOfInstructorResponse, error)
	mustEmbedUnimplementedStudentDefServiceServer()
}

// UnimplementedStudentDefServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStudentDefServiceServer struct {
}

func (UnimplementedStudentDefServiceServer) CreateStudentDef(context.Context, *CreateStudentDefRequest) (*CreateStudentDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStudentDef not implemented")
}
func (UnimplementedStudentDefServiceServer) GetStudentDef(context.Context, *GetStudentDefRequest) (*GetStudentDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentDef not implemented")
}
func (UnimplementedStudentDefServiceServer) UpdateStudentDef(context.Context, *UpdateStudentDefRequest) (*UpdateStudentDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudentDef not implemented")
}
func (UnimplementedStudentDefServiceServer) DeleteStudentDef(context.Context, *DeleteStudentDefRequest) (*DeleteStudentDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStudentDef not implemented")
}
func (UnimplementedStudentDefServiceServer) GetStudentDefs(context.Context, *GetStudentDefsRequest) (*GetStudentDefsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentDefs not implemented")
}
func (UnimplementedStudentDefServiceServer) GetAllStudentDefsOfInstructor(context.Context, *GetAllStudentDefsOfInstructorRequest) (*GetAllStudentDefsOfInstructorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStudentDefsOfInstructor not implemented")
}
func (UnimplementedStudentDefServiceServer) mustEmbedUnimplementedStudentDefServiceServer() {}

// UnsafeStudentDefServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudentDefServiceServer will
// result in compilation errors.
type UnsafeStudentDefServiceServer interface {
	mustEmbedUnimplementedStudentDefServiceServer()
}

func RegisterStudentDefServiceServer(s grpc.ServiceRegistrar, srv StudentDefServiceServer) {
	s.RegisterService(&StudentDefService_ServiceDesc, srv)
}

func _StudentDefService_CreateStudentDef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStudentDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).CreateStudentDef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_CreateStudentDef_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).CreateStudentDef(ctx, req.(*CreateStudentDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentDefService_GetStudentDef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).GetStudentDef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_GetStudentDef_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).GetStudentDef(ctx, req.(*GetStudentDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentDefService_UpdateStudentDef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStudentDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).UpdateStudentDef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_UpdateStudentDef_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).UpdateStudentDef(ctx, req.(*UpdateStudentDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentDefService_DeleteStudentDef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStudentDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).DeleteStudentDef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_DeleteStudentDef_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).DeleteStudentDef(ctx, req.(*DeleteStudentDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentDefService_GetStudentDefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentDefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).GetStudentDefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_GetStudentDefs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).GetStudentDefs(ctx, req.(*GetStudentDefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentDefService_GetAllStudentDefsOfInstructor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllStudentDefsOfInstructorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentDefServiceServer).GetAllStudentDefsOfInstructor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentDefService_GetAllStudentDefsOfInstructor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentDefServiceServer).GetAllStudentDefsOfInstructor(ctx, req.(*GetAllStudentDefsOfInstructorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StudentDefService_ServiceDesc is the grpc.ServiceDesc for StudentDefService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StudentDefService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.studentDef.v1.StudentDefService",
	HandlerType: (*StudentDefServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStudentDef",
			Handler:    _StudentDefService_CreateStudentDef_Handler,
		},
		{
			MethodName: "GetStudentDef",
			Handler:    _StudentDefService_GetStudentDef_Handler,
		},
		{
			MethodName: "UpdateStudentDef",
			Handler:    _StudentDefService_UpdateStudentDef_Handler,
		},
		{
			MethodName: "DeleteStudentDef",
			Handler:    _StudentDefService_DeleteStudentDef_Handler,
		},
		{
			MethodName: "GetStudentDefs",
			Handler:    _StudentDefService_GetStudentDefs_Handler,
		},
		{
			MethodName: "GetAllStudentDefsOfInstructor",
			Handler:    _StudentDefService_GetAllStudentDefsOfInstructor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api_student_def.proto",
}
