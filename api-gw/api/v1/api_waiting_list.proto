syntax = "proto3";

package api.waitingList.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package="github.com/qthuy2k1/thesis-management-backend/classroom-waiting-list/api/v1";

service WaitingListService {
    rpc CreateWaitingList(CreateWaitingListRequest) returns (CreateWaitingListResponse){
        option (google.api.http) = {
            post: "/api/waiting-list"
            body: "*"
        };
    }
    
    rpc GetWaitingList(GetWaitingListRequest) returns (GetWaitingListResponse){
        option (google.api.http) = {
            get: "/api/waiting-list/{id}"
        };
    }

    rpc UpdateWaitingList(UpdateWaitingListRequest) returns (UpdateWaitingListResponse){
        option (google.api.http) = {
            put: "/api/waiting-list/{id}"
            body: "*"
        };
    }

    rpc DeleteWaitingList(DeleteWaitingListRequest) returns (DeleteWaitingListResponse){
        option (google.api.http) = {
            delete: "/api/waiting-list/{id}"
        };
    }

    rpc GetWaitingListsOfClassroom(GetWaitingListsRequest) returns (GetWaitingListsResponse) {
        option (google.api.http) = {
            get: "/api/classroom/{classroomID}/waiting-list"
        };
    }

    rpc CheckUserInWaitingListOfClassroom(CheckUserInWaitingListClassroomRequest) returns (CheckUserInWaitingListClassroomResponse) {
        option (google.api.http) = {
            get: "/api/user/{userID}/waiting-list"
        };
    }

}

message CommonWaitingListResponse {
    int32 statusCode = 1 [(validate.rules).int32.gte = 1];
    string message = 2 [(validate.rules).string = {min_len: 2}];
}


// ====== waitingList ======
message WaitingListInput {
    int32 classroomID = 1 [(validate.rules).int32.gte = 1];
    string userID = 2;
}

message WaitingListResponse {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    ClassroomWTLResponse classroom = 2;
    UserWaitingListResponse user = 3;
    google.protobuf.Timestamp createdAt = 4 [(validate.rules).timestamp.required = true];
}

message UserWaitingListResponse {
    string id = 1;
    string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["teacher", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
    optional string classroomID = 9;
}

message CreateWaitingListRequest {
   WaitingListInput waitingList = 1 [(validate.rules).message = {required: true}];
}

message CreateWaitingListResponse {
    CommonWaitingListResponse response = 1 [(validate.rules).message = {required: true}];
}


// ====== GET ======
message GetWaitingListRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
}

message GetWaitingListResponse {
    CommonWaitingListResponse response = 1 [(validate.rules).message = {required: true}];
    WaitingListResponse waitingList = 2 [(validate.rules).message = {required: true}];
}

// ====== PUT ======
message UpdateWaitingListRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    WaitingListInput waitingList = 2 [(validate.rules).message = {required: true}];
}

message UpdateWaitingListResponse {
    CommonWaitingListResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== DELETE ======
message DeleteWaitingListRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
}

message DeleteWaitingListResponse {
    CommonWaitingListResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== GET ALL ======
message GetWaitingListsRequest {
    int32 classroomID = 1 [(validate.rules).int32.gte = 1];
}

message GetWaitingListsResponse {
    CommonWaitingListResponse response = 1 [(validate.rules).message = {required: true}]; 
    repeated WaitingListResponse waitingLists = 2;
}

message ClassroomWTLResponse {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string description = 3 [(validate.rules).string = {min_len: 2}];
    string status = 4 [(validate.rules).string = {min_len: 2}];
    LecturerWaitingListResponse lecturer = 5;
    string codeClassroom = 6 [(validate.rules).string = {min_len: 2}];
    string topicTags = 7 [(validate.rules).string = {min_len: 2}];
    int32 quantity = 8 [(validate.rules).int32.gte = 0];
    google.protobuf.Timestamp createdAt = 9 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 10 [(validate.rules).timestamp.required = true];
}

message LecturerWaitingListResponse {
    string id = 1;
    string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["teacher", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
    optional string classroomID = 9;
}

// ====== CHECK USER IN WAITING LIST OF CLASSROOM ======
message CheckUserInWaitingListClassroomRequest{
    string userID = 1;
}

message CheckUserInWaitingListClassroomResponse{
    string status = 1;
    ClassroomWTLResponse classroom = 2;
}