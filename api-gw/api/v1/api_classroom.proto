syntax = "proto3";

package api.classroom.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/api/datetime.proto";

option go_package="github.com/qthuy2k1/thesis_management_backend/classroom/api/v1";

service ClassroomService {
    rpc CreateClassroom(CreateClassroomRequest) returns (CreateClassroomResponse){
        option (google.api.http) = {
            post: "/api/classroom"
            body: "*"
        };
    }
    
    rpc GetClassroom(GetClassroomRequest) returns (GetClassroomResponse){
        option (google.api.http) = {
            get: "/api/classroom/{id}"
        };
    }

    rpc UpdateClassroom(UpdateClassroomRequest) returns (UpdateClassroomResponse){
        option (google.api.http) = {
            put: "/api/classroom/{id}"
            body: "*"
        };
    }

    rpc DeleteClassroom(DeleteClassroomRequest) returns (DeleteClassroomResponse){
        option (google.api.http) = {
            delete: "/api/classroom/{id}"
        };
    }

    rpc GetClassrooms(GetClassroomsRequest) returns (GetClassroomsResponse) {
        option (google.api.http) = {
            get: "/api/classroom"
        };
    }

    rpc CheckClassroomExists(CheckClassroomExistsRequest) returns (CheckClassroomExistsResponse){};
}


message CommonClassroomResponse {
    int32 statusCode = 1 [(validate.rules).int32.gte = 1];
    string message = 2 [(validate.rules).string = {min_len: 2}];
}

// ====== POST ======
message ClassroomInput {
    string title = 1 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string description = 2 [(validate.rules).string = {min_len: 2}];
    string status = 3 [(validate.rules).string = {min_len: 2}];
    string lecturerId = 4;
    string codeClassroom = 5 [(validate.rules).string = {min_len: 2}];
    string topicTags = 6 [(validate.rules).string = {min_len: 2}];
    int32 quantity = 7 [(validate.rules).int32.gte = 0];
}


message ClassroomResponse {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string description = 3 [(validate.rules).string = {min_len: 2}];
    string status = 4 [(validate.rules).string = {min_len: 2}];
    string lecturerId = 5;
    string codeClassroom = 6 [(validate.rules).string = {min_len: 2}];
    string topicTags = 7 [(validate.rules).string = {min_len: 2}];
    int32 quantity = 8 [(validate.rules).int32.gte = 0];
    google.protobuf.Timestamp createdAt = 9 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 10 [(validate.rules).timestamp.required = true];
    repeated PostsAndExercisesOfClassroom postsAndExercises = 11;
}


message PostsAndExercisesOfClassroom {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string content = 3 [(validate.rules).string = {min_len: 2}];
    int32 classroomID = 4 [(validate.rules).int32.gte = 1];
    optional google.type.DateTime deadline = 5;
    optional int32 score = 6 [(validate.rules).int32.gte = 0];
    int32 reportingStageID = 7 [(validate.rules).int32.gte = 1];
    string authorID = 8;
    google.protobuf.Timestamp createdAt = 9 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 10 [(validate.rules).timestamp.required = true];
    string type = 11 [(validate.rules).string = {in: ["post", "exercise"]}];
}

message CreateClassroomRequest {
   ClassroomInput classroom = 1 [(validate.rules).message = {required: true}];
}

message CreateClassroomResponse {
    CommonClassroomResponse response = 1 [(validate.rules).message = {required: true}];
}


// ====== GET ======
message GetClassroomRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string titleSearch = 2;
    string sortColumn = 3;
}

message GetClassroomResponse {
    CommonClassroomResponse response = 1 [(validate.rules).message = {required: true}];
    ClassroomResponse classroom = 2 [(validate.rules).message = {required: true}];
} 

message CheckClassroomExistsRequest {
    int32 classroomID = 1 [(validate.rules).int32.gte = 1];
}

message CheckClassroomExistsResponse {
    bool exists = 1;
}


// ====== PUT ======
message UpdateClassroomRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    ClassroomInput classroom = 2 [(validate.rules).message = {required: true}];
}

message UpdateClassroomResponse {
    CommonClassroomResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== DELETE ======
message DeleteClassroomRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
}

message DeleteClassroomResponse {
    CommonClassroomResponse response = 1 [(validate.rules).message = {required: true}];
}


// ====== GET ALL ======
message GetClassroomsRequest {
    int32 page = 1;
    int32 limit = 2;
    string titleSearch = 3;
    string sortColumn = 4;
    bool isDesc = 5;
}

message GetClassroomsResponse {
    CommonClassroomResponse response = 1 [(validate.rules).message = {required: true}];
    int32 totalCount = 2 [(validate.rules).int32.gte = 0];
    repeated ClassroomResponse classrooms = 3;
}