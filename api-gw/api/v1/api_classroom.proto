syntax = "proto3";

package api.classroom.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package="github.com/qthuy2k1/thesis_management_backend/classroom/api/v1";

service ClassroomService {
    rpc CreateClassroom(CreateClassroomRequest) returns (CreateClassroomResponse){
        option (google.api.http) = {
            post: "/api/classroom"
            body: "*"
        };
    }
    
    rpc GetClassroom(GetClassroomRequest) returns (GetClassroomResponse){
        option (google.api.http) = {
            get: "/api/classroom/{id}"
        };
    }

    rpc UpdateClassroom(UpdateClassroomRequest) returns (UpdateClassroomResponse){
        option (google.api.http) = {
            put: "/api/classroom/{id}"
            body: "*"
        };
    }

    rpc DeleteClassroom(DeleteClassroomRequest) returns (DeleteClassroomResponse){
        option (google.api.http) = {
            delete: "/api/classroom/{id}"
        };
    }

    rpc CheckClassroomExists(CheckClassroomExistsRequest) returns (CheckClassroomExistsResponse){};
}


message CommonClassroomResponse {
    int32 statusCode = 1;
    string message = 2;
}

// ====== POST ======
message ClassroomInput {
    string title = 1;
    string description = 2;
    string status = 3;
}


message ClassroomResponse {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string status = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message CreateClassroomRequest {
   ClassroomInput classroom = 1;
}

message CreateClassroomResponse {
    CommonClassroomResponse response = 1;
}


// ====== GET ======
message GetClassroomRequest {
    int32 id = 1;
}

message GetClassroomResponse {
    CommonClassroomResponse response = 1;
    ClassroomResponse classroom = 2;
} 

message CheckClassroomExistsRequest {
    int32 classroomID = 1;
}

message CheckClassroomExistsResponse {
    bool exists = 1;
}


// ====== PUT ======
message UpdateClassroomRequest {
    int32 id = 1;
    ClassroomInput classroom = 2;
}

message UpdateClassroomResponse {
    CommonClassroomResponse response = 1;
}

// ====== DELETE ======
message DeleteClassroomRequest {
    int32 id = 1;
}

message DeleteClassroomResponse {
    CommonClassroomResponse response = 1;
}

