syntax = "proto3";

package api.exercise.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/datetime.proto";
import "validate/validate.proto";

option go_package="github.com/qthuy2k1/thesis_management_backend/exercise/api/v1";

service ExerciseService {
    rpc CreateExercise(CreateExerciseRequest) returns (CreateExerciseResponse){
        option (google.api.http) = {
            post: "/api/exercise"
            body: "*"
        };
    }
    
    rpc GetExercise(GetExerciseRequest) returns (GetExerciseResponse){
        option (google.api.http) = {
            get: "/api/exercise/{id}"
        };
    }

    rpc UpdateExercise(UpdateExerciseRequest) returns (UpdateExerciseResponse){
        option (google.api.http) = {
            put: "/api/exercise/{id}"
            body: "*"
        };
    }

    rpc DeleteExercise(DeleteExerciseRequest) returns (DeleteExerciseResponse){
        option (google.api.http) = {
            delete: "/api/exercise/{id}"
        };
    }

    rpc GetExercises(GetExercisesRequest) returns (GetExercisesResponse) {
        option (google.api.http) = {
            get: "/api/exercise"
        };
    }

    rpc GetAllExercisesOfClassroom(GetAllExercisesOfClassroomRequest) returns (GetAllExercisesOfClassroomResponse) {
        option (google.api.http) = {
            get: "/api/class/{classroomID}/exercise"
        };
    }

    rpc GetAllExercisesInReportingStage(GetAllExercisesInReportingStageRequest) returns (GetAllExercisesInReportingStageResponse) {
        option (google.api.http) = {
            get: "/api/class/{classroomID}/exercise/stage/{categoryID}"
        };
    }
}

message CommonExerciseResponse {
    int64 statusCode = 1 [(validate.rules).int64.gte = 1];
    string message = 2 [(validate.rules).string = {min_len: 2}];
}


// ====== exercise ======
message ExerciseInput {
    string title = 1 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string description = 2 [(validate.rules).string = {min_len: 2}];
    int64 classroomID = 3 [(validate.rules).int64.gte = 1];
    google.type.DateTime deadline = 4;
    int64 categoryID = 5 [(validate.rules).int64.gte = 1];
    string authorID = 6;
    repeated AttachmentExerciseInput attachments = 7;
}

message SubmissionExerciseInput {
    google.type.DateTime submission_date = 1;
    string status = 2 [(validate.rules).string = {min_len: 2}];
}

message AttachmentExerciseInput {
    string fileURL = 1;
    string status = 2;
}

message ExerciseResponse {
    int64 id = 1 [(validate.rules).int64.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2}];
    string description = 3 [(validate.rules).string = {min_len: 2}];
    int64 classroomID = 4 [(validate.rules).int64.gte = 1];
    google.type.DateTime deadline = 5;
    ReportingStageExerciseResponse category = 6;
    AuthorExerciseResponse author = 7;
    google.protobuf.Timestamp createdAt = 8 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 9 [(validate.rules).timestamp.required = true];
    repeated AttachmentExerciseResponse attachments = 10;
}


// message SubmissionExerciseResponse {
//     int64 id = 1 [(validate.rules).int64.gte = 1];
//     string userID = 2;
//     int64 exerciseID = 3 [(validate.rules).int64.gte = 1];
//     google.type.DateTime submission_date = 4;
//     string status = 5 [(validate.rules).string = {min_len: 2}];
//     repeated AttachmentExerciseResponse attachments = 6;
// }

message AttachmentExerciseResponse {
    int64 id = 1;
    string fileURL = 2;
    string status = 3;
    AuthorExerciseResponse author = 6;
    google.protobuf.Timestamp created_at = 7;
}

message ReportingStageExerciseResponse {
    int64 id = 1 [(validate.rules).int64.gte = 1];
    string label = 2 [(validate.rules).string = {min_len: 2}];
    string description = 3 [(validate.rules).string = {min_len: 2}];   
    string value = 4;
}

message AuthorExerciseResponse {
    string id = 1;
    optional string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["teacher", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
}

message CreateExerciseRequest {
   ExerciseInput exercise = 1 [(validate.rules).message = {required: true}];
}

message CreateExerciseResponse {
    CommonExerciseResponse response = 1 [(validate.rules).message = {required: true}];
}

message CommentExerciseResponse {
    int64 id = 1;
    AuthorExerciseResponse user = 2;
    int64 exerciseID = 3;
    string content = 4;
    google.protobuf.Timestamp created_at = 5;
}

// ====== GET ======
message GetExerciseRequest {
    int64 id = 1 [(validate.rules).int64.gte = 1];
}

message GetExerciseResponse {
    ExerciseResponse exercise = 1 [(validate.rules).message = {required: true}];
    repeated CommentExerciseResponse comments = 2;
}

// ====== PUT ======
message UpdateExerciseRequest {
    int64 id = 1 [(validate.rules).int64.gte = 1];
    ExerciseInput exercise = 2 [(validate.rules).message = {required: true}];
}

message UpdateExerciseResponse {
    CommonExerciseResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== DELETE ======
message DeleteExerciseRequest {
    int64 id = 1 [(validate.rules).int64.gte = 1];
}

message DeleteExerciseResponse {
    CommonExerciseResponse response = 1 [(validate.rules).message = {required: true}];
}


// ====== GET ALL ======
message GetExercisesRequest {
    int64 page = 1;
    int64 limit = 2;
    string titleSearch = 3;
    string sortColumn = 4;
    bool isDesc = 5;
}

message GetExercisesResponse {
    int64 totalCount = 1 [(validate.rules).int64.gte = 0];
    repeated ExerciseResponse exercises = 2;
}

// ====== GET ALL OF CLASSROOM ======
message GetAllExercisesOfClassroomRequest {
    int64 page = 1;
    int64 limit = 2;
    string titleSearch = 3;
    string sortColumn = 4;
    bool isDesc = 5;
    int64 classroomID = 6 [(validate.rules).int64.gte = 1];
}

message GetAllExercisesOfClassroomResponse {
    int64 totalCount = 1 [(validate.rules).int64.gte = 0];
    repeated ExerciseResponse exercises = 2;
}



message GetAllExercisesInReportingStageRequest {
    int64 classroomID = 1; 
    int64 categoryID = 2;
}

message GetAllExercisesInReportingStageResponse {
    CommonExerciseResponse response = 1;
    int64 totalCount = 2;
    repeated ExerciseResponse exercises = 3;
}