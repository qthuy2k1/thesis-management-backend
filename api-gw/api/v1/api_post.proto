syntax = "proto3";

package api.post.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package="github.com/qthuy2k1/thesis_management_backend/post/api/v1";

service PostService {
    rpc CreatePost(CreatePostRequest) returns (CreatePostResponse){
        option (google.api.http) = {
            post: "/api/post"
            body: "*"
        };
    }
    
    rpc GetPost(GetPostRequest) returns (GetPostResponse){
        option (google.api.http) = {
            get: "/api/post/{id}"
        };
    }

    rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse){
        option (google.api.http) = {
            put: "/api/post/{id}"
            body: "*"
        };
    }

    rpc DeletePost(DeletePostRequest) returns (DeletePostResponse){
        option (google.api.http) = {
            delete: "/api/post/{id}"
        };
    }

    rpc GetPosts(GetPostsRequest) returns (GetPostsResponse) {
        option (google.api.http) = {
            get: "/api/post"
        };
    }

    rpc GetAllPostsOfClassroom(GetAllPostsOfClassroomRequest) returns (GetAllPostsOfClassroomResponse) {
        option (google.api.http) = {
            get: "/api/classroom/{classroomID}/post"
        };
    }
}

message CommonPostResponse {
    int32 statusCode = 1 [(validate.rules).int32.gte = 1];
    string message = 2 [(validate.rules).string = {min_len: 2}];
}


// ====== POST ======
message PostInput {
    string title = 1 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string content = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    int32 classroomID = 3 [(validate.rules).int32.gte = 1];
    int32 reportingStageID = 4 [(validate.rules).int32.gte = 1];
    string authorID = 5;
}

message PostResponse {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string content = 3 [(validate.rules).string = {min_len: 2}];
    int32 classroomID = 4 [(validate.rules).int32.gte = 1];
    ReportingStagePostResponse reportingStage = 5;
    AuthorPostResponse author = 6;
    google.protobuf.Timestamp createdAt = 7 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 8 [(validate.rules).timestamp.required = true];
}

message ReportingStagePostResponse {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    string name = 2 [(validate.rules).string = {min_len: 2}];
    string description = 3 [(validate.rules).string = {min_len: 2}];   
}

message AuthorPostResponse {
    string id = 1;
    string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["teacher", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
    optional string classroomID = 9;
}

message CreatePostRequest {
   PostInput post = 1 [(validate.rules).message = {required: true}];
}

message CreatePostResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
}

message CommentPostResponse {
    int32 id = 1;
    AuthorPostResponse user = 2;
    int32 postID = 3;
    string content = 4;
    google.protobuf.Timestamp created_at = 5;
}

// ====== GET ======
message GetPostRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
}

message GetPostResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
    PostResponse post = 2 [(validate.rules).message = {required: true}];
    repeated CommentPostResponse comments = 3;
}

// ====== PUT ======
message UpdatePostRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
    PostInput post = 2 [(validate.rules).message = {required: true}];
}

message UpdatePostResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== DELETE ======
message DeletePostRequest {
    int32 id = 1 [(validate.rules).int32.gte = 1];
}

message DeletePostResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
}


// ====== GET ALL ======
message GetPostsRequest {
    int32 page = 1;
    int32 limit = 2;
    string titleSearch = 3;
    string sortColumn = 4;
    bool isDesc = 5;
}

message GetPostsResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
    int32 totalCount = 2 [(validate.rules).int32.gte = 0];
    repeated PostResponse posts = 3;
}

// ====== GET ALL OF CLASSROOM ======
message GetAllPostsOfClassroomRequest {
    int32 page = 1;
    int32 limit = 2;
    string titleSearch = 3;
    string sortColumn = 4;
    bool isDesc = 5;
    int32 classroomID = 6 [(validate.rules).int32.gte = 1];
}

message GetAllPostsOfClassroomResponse {
    CommonPostResponse response = 1 [(validate.rules).message = {required: true}];
    int32 totalCount = 2 [(validate.rules).int32.gte = 0];
    repeated PostResponse posts = 3;
}