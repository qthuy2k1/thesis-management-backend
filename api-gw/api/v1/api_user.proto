syntax = "proto3";

package api.user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package="github.com/qthuy2k1/thesis_management_backend/user/api/v1";

service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/api/auth"
            body: "*"
        };
    }
    
    rpc GetUser(GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get: "/api/auth/{id}"
        };
    }

    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            put: "/api/auth/{id}"
            body: "*"
        };
    }

    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse){
        option (google.api.http) = {
            delete: "/api/auth/{id}"
        };
    }

    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
        option (google.api.http) = {
            get: "/api/auth"
        };
    }

    rpc ApproveUserJoinClassroom(ApproveUserJoinClassroomRequest) returns (ApproveUserJoinClassroomResponse) {
        option (google.api.http) = {
            put: "/api/classroom/{classroomID}/approve/{userID}"
        };
    }

    rpc CheckStatusUserJoinClassroom(CheckStatusUserJoinClassroomRequest) returns (CheckStatusUserJoinClassroomResponse) {
        option (google.api.http) = {
            get: "/api/auth/check-subscribe/{userID}"
        };
    }

    rpc UnsubscribeClassroom(UnsubscribeClassroomRequest) returns (UnsubscribeClassroomResponse) {
        option (google.api.http) = {
            delete: "/api/auth/{memberID}/unsubscribe/{classroomID}"
        };
    };

    rpc UpdateBasicUser(UpdateBasicUserRequest) returns (UpdateBasicUserResponse) {
        option (google.api.http) = {
            put: "/api/user/{id}/update-info"
        };
    }

    rpc GetAllLecturers(GetAllLecturerRequest) returns (GetAllLecturerResponse) {
        option (google.api.http) = {
            get: "/api/auth/lecturer"
        };
    }

    rpc GetUserAttachment(GetUserAttachmentRequest) returns (GetUserAttachmentResponse) {
        option (google.api.http) = {
            get: "/api/final-file/auth/{userID}"
        };
    }
}

message CommonUserResponse {
    int64 statusCode = 1 [(validate.rules).int64.gte = 1];
    string message = 2 [(validate.rules).string = {min_len: 2}];
}


// ====== user ======
message UserInput {
    string id = 1 [(validate.rules).string = {min_len: 2}];
    optional string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["lecturer", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
    optional string password = 9 [(validate.rules).string = {min_len: 2}];
}

message UserResponse {
    string id = 1;
    optional string class = 2 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 3 [(validate.rules).string = {min_len: 2}];
    optional string phone = 4 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 5;
    string role = 6 [(validate.rules).string = {in: ["lecturer", "student", "admin"]}];
    string name = 7 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 8 [(validate.rules).string.email = true];
    TopicUserResponse topic = 10;
}

message CreateUserRequest {
   UserInput user = 1 [(validate.rules).message = {required: true}];
}

message CreateUserResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
    string hashedPassword = 2 [(validate.rules).string = {min_len: 2}];
}


// ====== GET ======
message GetUserRequest {
    string id = 1 [(validate.rules).string = {min_len: 2}];
}

message GetUserResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
    UserResponse user = 2 [(validate.rules).message = {required: true}];
}

// ====== PUT ======
message UpdateUserRequest {
    string id = 1 [(validate.rules).string = {min_len: 2}];
    UserInput user = 2 [(validate.rules).message = {required: true}];
}

message UpdateUserResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
}

// ====== DELETE ======
message DeleteUserRequest {
    string id = 1 [(validate.rules).string = {min_len: 2}];
}

message DeleteUserResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
}

message TopicUserResponse {
    int64 id = 1;
    string title = 2;
    string typeTopic = 3;
    int64 memberQuantity = 4;
    UserResponse student = 5;
    string memberEmail = 6;
    string description = 7;
}

// ====== GET ALL ======
message GetUsersRequest {}

message GetUsersResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
    int64 totalCount = 2 [(validate.rules).int64.gte = 0];
    repeated UserResponse users = 3;
}

// ====== APPROVE USER JOIN CLASSROOM ======
message ApproveUserJoinClassroomRequest {
    int64 classroomID = 1 [(validate.rules).int64.gte = 1];
    string userID = 2;
}

message ApproveUserJoinClassroomResponse {
    CommonUserResponse response = 1 [(validate.rules).message = {required: true}];
}


// ======= LOGIN ======
message LoginRequest {
    
}

message LoginResponse {}

message ClassroomUserResponse {
    int64 id = 1 [(validate.rules).int64.gte = 1];
    string title = 2 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string description = 3 [(validate.rules).string = {min_len: 2}];
    string status = 4 [(validate.rules).string = {min_len: 2}];
    UserResponse lecturer = 5;
    string classCourse = 6 [(validate.rules).string = {min_len: 2}];
    optional string topicTags = 7 [(validate.rules).string = {min_len: 2}];
    int64 quantityStudent = 8 [(validate.rules).int64.gte = 0];
    google.protobuf.Timestamp createdAt = 9 [(validate.rules).timestamp.required = true];
    google.protobuf.Timestamp updatedAt = 10 [(validate.rules).timestamp.required = true];
}



// ====== CHECK USER JOIN CLASSROOM ======
message CheckStatusUserJoinClassroomRequest{
    string userID = 1;
}


message MemberUserResponse {
    int64 id = 1;
    ClassroomUserResponse classroom = 2;
    UserResponse member = 3;
    string status = 4;
    bool isDefense = 5;
    google.protobuf.Timestamp created_at = 6;
}


message CheckStatusUserJoinClassroomResponse{
    CommonUserResponse response = 1;
    repeated MemberUserResponse member = 2;
    string status = 3;
}


message UserBasicInput {
    string class = 1 [(validate.rules).string = {min_len: 4, max_len: 10}];
    optional string major = 2 [(validate.rules).string = {min_len: 2}];
    optional string phone = 3 [(validate.rules).string = {min_len: 10, max_len: 11}];
    string photoSrc = 4;
    string name = 5 [(validate.rules).string = {min_len: 2, max_len: 200}];
    string email = 6 [(validate.rules).string.email = true];
}


// ====== PUT ======
message UpdateBasicUserRequest {
    string id = 1;
    UserInput user = 2 [(validate.rules).message = {required: true}];
}

message UpdateBasicUserResponse {
    CommonUserResponse response = 1;
}



message UnsubscribeClassroomRequest {
    string memberID = 1 [(validate.rules).string = {min_len: 2}];
    int64 classroomID = 2 [(validate.rules).int64.gte = 1];
}

message UnsubscribeClassroomResponse {
    CommonUserResponse response = 1;
}


message GetAllLecturerRequest {

}

message GetAllLecturerResponse {
    CommonUserResponse response = 1;
    int64 totalCount = 2;
    repeated UserResponse lecturers = 3;
}

message AttachmentFinalFileRequest {
    string fileURL = 1;
    string status = 2;
    string authorID = 6;
    string name = 7;
    string type = 8;
    string thumbnail = 9;
    int64 size = 10;
}

message AttachmentFinalFileResponse {
    int64 id = 1;
    string fileURL = 2;
    string status = 3;
    string authorID = 7;
    google.protobuf.Timestamp created_at = 8;
    string name = 9;
    string type = 10;
    string thumbnail = 11;
    int64 size = 12;
}

message AttachmentFinalFileUserResponse {
    int64 id = 1;
    string fileURL = 2;
    string status = 3;
    google.protobuf.Timestamp created_at = 8;
    string name = 9;
    string type = 10;
    string thumbnail = 11;
    int64 size = 12;
}

message GetUserAttachmentRequest {
    string userID = 1;
}

message FinalFile {
    AttachmentFinalFileResponse attachment = 1;
    UserResponse author = 2;
}


message GetUserAttachmentResponse {
    FinalFile finalFile = 1;
}