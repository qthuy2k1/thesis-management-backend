// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: thesis_commitee.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CommiteeService_CreateCommitee_FullMethodName                        = "/commitee.v1.CommiteeService/CreateCommitee"
	CommiteeService_GetCommitee_FullMethodName                           = "/commitee.v1.CommiteeService/GetCommitee"
	CommiteeService_UpdateCommitee_FullMethodName                        = "/commitee.v1.CommiteeService/UpdateCommitee"
	CommiteeService_DeleteCommitee_FullMethodName                        = "/commitee.v1.CommiteeService/DeleteCommitee"
	CommiteeService_GetCommitees_FullMethodName                          = "/commitee.v1.CommiteeService/GetCommitees"
	CommiteeService_CreateCommiteeUserDetail_FullMethodName              = "/commitee.v1.CommiteeService/CreateCommiteeUserDetail"
	CommiteeService_GetCommiteeUserDetail_FullMethodName                 = "/commitee.v1.CommiteeService/GetCommiteeUserDetail"
	CommiteeService_UpdateCommiteeUserDetail_FullMethodName              = "/commitee.v1.CommiteeService/UpdateCommiteeUserDetail"
	CommiteeService_DeleteCommiteeUserDetail_FullMethodName              = "/commitee.v1.CommiteeService/DeleteCommiteeUserDetail"
	CommiteeService_GetCommiteeUserDetails_FullMethodName                = "/commitee.v1.CommiteeService/GetCommiteeUserDetails"
	CommiteeService_GetAllCommiteeUserDetailsFromCommitee_FullMethodName = "/commitee.v1.CommiteeService/GetAllCommiteeUserDetailsFromCommitee"
	CommiteeService_CreateRoom_FullMethodName                            = "/commitee.v1.CommiteeService/CreateRoom"
	CommiteeService_GetRoom_FullMethodName                               = "/commitee.v1.CommiteeService/GetRoom"
	CommiteeService_UpdateRoom_FullMethodName                            = "/commitee.v1.CommiteeService/UpdateRoom"
	CommiteeService_DeleteRoom_FullMethodName                            = "/commitee.v1.CommiteeService/DeleteRoom"
	CommiteeService_GetRooms_FullMethodName                              = "/commitee.v1.CommiteeService/GetRooms"
)

// CommiteeServiceClient is the client API for CommiteeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CommiteeServiceClient interface {
	CreateCommitee(ctx context.Context, in *CreateCommiteeRequest, opts ...grpc.CallOption) (*CreateCommiteeResponse, error)
	GetCommitee(ctx context.Context, in *GetCommiteeRequest, opts ...grpc.CallOption) (*GetCommiteeResponse, error)
	UpdateCommitee(ctx context.Context, in *UpdateCommiteeRequest, opts ...grpc.CallOption) (*UpdateCommiteeResponse, error)
	DeleteCommitee(ctx context.Context, in *DeleteCommiteeRequest, opts ...grpc.CallOption) (*DeleteCommiteeResponse, error)
	GetCommitees(ctx context.Context, in *GetCommiteesRequest, opts ...grpc.CallOption) (*GetCommiteesResponse, error)
	CreateCommiteeUserDetail(ctx context.Context, in *CreateCommiteeUserDetailRequest, opts ...grpc.CallOption) (*CreateCommiteeUserDetailResponse, error)
	GetCommiteeUserDetail(ctx context.Context, in *GetCommiteeUserDetailRequest, opts ...grpc.CallOption) (*GetCommiteeUserDetailResponse, error)
	UpdateCommiteeUserDetail(ctx context.Context, in *UpdateCommiteeUserDetailRequest, opts ...grpc.CallOption) (*UpdateCommiteeUserDetailResponse, error)
	DeleteCommiteeUserDetail(ctx context.Context, in *DeleteCommiteeUserDetailRequest, opts ...grpc.CallOption) (*DeleteCommiteeUserDetailResponse, error)
	GetCommiteeUserDetails(ctx context.Context, in *GetCommiteeUserDetailsRequest, opts ...grpc.CallOption) (*GetCommiteeUserDetailsResponse, error)
	GetAllCommiteeUserDetailsFromCommitee(ctx context.Context, in *GetAllCommiteeUserDetailsFromCommiteeRequest, opts ...grpc.CallOption) (*GetAllCommiteeUserDetailsFromCommiteeResponse, error)
	CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*CreateRoomResponse, error)
	GetRoom(ctx context.Context, in *GetRoomRequest, opts ...grpc.CallOption) (*GetRoomResponse, error)
	UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*UpdateRoomResponse, error)
	DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*DeleteRoomResponse, error)
	GetRooms(ctx context.Context, in *GetRoomsRequest, opts ...grpc.CallOption) (*GetRoomsResponse, error)
}

type commiteeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommiteeServiceClient(cc grpc.ClientConnInterface) CommiteeServiceClient {
	return &commiteeServiceClient{cc}
}

func (c *commiteeServiceClient) CreateCommitee(ctx context.Context, in *CreateCommiteeRequest, opts ...grpc.CallOption) (*CreateCommiteeResponse, error) {
	out := new(CreateCommiteeResponse)
	err := c.cc.Invoke(ctx, CommiteeService_CreateCommitee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetCommitee(ctx context.Context, in *GetCommiteeRequest, opts ...grpc.CallOption) (*GetCommiteeResponse, error) {
	out := new(GetCommiteeResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetCommitee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) UpdateCommitee(ctx context.Context, in *UpdateCommiteeRequest, opts ...grpc.CallOption) (*UpdateCommiteeResponse, error) {
	out := new(UpdateCommiteeResponse)
	err := c.cc.Invoke(ctx, CommiteeService_UpdateCommitee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) DeleteCommitee(ctx context.Context, in *DeleteCommiteeRequest, opts ...grpc.CallOption) (*DeleteCommiteeResponse, error) {
	out := new(DeleteCommiteeResponse)
	err := c.cc.Invoke(ctx, CommiteeService_DeleteCommitee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetCommitees(ctx context.Context, in *GetCommiteesRequest, opts ...grpc.CallOption) (*GetCommiteesResponse, error) {
	out := new(GetCommiteesResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetCommitees_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) CreateCommiteeUserDetail(ctx context.Context, in *CreateCommiteeUserDetailRequest, opts ...grpc.CallOption) (*CreateCommiteeUserDetailResponse, error) {
	out := new(CreateCommiteeUserDetailResponse)
	err := c.cc.Invoke(ctx, CommiteeService_CreateCommiteeUserDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetCommiteeUserDetail(ctx context.Context, in *GetCommiteeUserDetailRequest, opts ...grpc.CallOption) (*GetCommiteeUserDetailResponse, error) {
	out := new(GetCommiteeUserDetailResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetCommiteeUserDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) UpdateCommiteeUserDetail(ctx context.Context, in *UpdateCommiteeUserDetailRequest, opts ...grpc.CallOption) (*UpdateCommiteeUserDetailResponse, error) {
	out := new(UpdateCommiteeUserDetailResponse)
	err := c.cc.Invoke(ctx, CommiteeService_UpdateCommiteeUserDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) DeleteCommiteeUserDetail(ctx context.Context, in *DeleteCommiteeUserDetailRequest, opts ...grpc.CallOption) (*DeleteCommiteeUserDetailResponse, error) {
	out := new(DeleteCommiteeUserDetailResponse)
	err := c.cc.Invoke(ctx, CommiteeService_DeleteCommiteeUserDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetCommiteeUserDetails(ctx context.Context, in *GetCommiteeUserDetailsRequest, opts ...grpc.CallOption) (*GetCommiteeUserDetailsResponse, error) {
	out := new(GetCommiteeUserDetailsResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetCommiteeUserDetails_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetAllCommiteeUserDetailsFromCommitee(ctx context.Context, in *GetAllCommiteeUserDetailsFromCommiteeRequest, opts ...grpc.CallOption) (*GetAllCommiteeUserDetailsFromCommiteeResponse, error) {
	out := new(GetAllCommiteeUserDetailsFromCommiteeResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetAllCommiteeUserDetailsFromCommitee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*CreateRoomResponse, error) {
	out := new(CreateRoomResponse)
	err := c.cc.Invoke(ctx, CommiteeService_CreateRoom_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetRoom(ctx context.Context, in *GetRoomRequest, opts ...grpc.CallOption) (*GetRoomResponse, error) {
	out := new(GetRoomResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetRoom_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*UpdateRoomResponse, error) {
	out := new(UpdateRoomResponse)
	err := c.cc.Invoke(ctx, CommiteeService_UpdateRoom_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*DeleteRoomResponse, error) {
	out := new(DeleteRoomResponse)
	err := c.cc.Invoke(ctx, CommiteeService_DeleteRoom_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commiteeServiceClient) GetRooms(ctx context.Context, in *GetRoomsRequest, opts ...grpc.CallOption) (*GetRoomsResponse, error) {
	out := new(GetRoomsResponse)
	err := c.cc.Invoke(ctx, CommiteeService_GetRooms_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommiteeServiceServer is the server API for CommiteeService service.
// All implementations must embed UnimplementedCommiteeServiceServer
// for forward compatibility
type CommiteeServiceServer interface {
	CreateCommitee(context.Context, *CreateCommiteeRequest) (*CreateCommiteeResponse, error)
	GetCommitee(context.Context, *GetCommiteeRequest) (*GetCommiteeResponse, error)
	UpdateCommitee(context.Context, *UpdateCommiteeRequest) (*UpdateCommiteeResponse, error)
	DeleteCommitee(context.Context, *DeleteCommiteeRequest) (*DeleteCommiteeResponse, error)
	GetCommitees(context.Context, *GetCommiteesRequest) (*GetCommiteesResponse, error)
	CreateCommiteeUserDetail(context.Context, *CreateCommiteeUserDetailRequest) (*CreateCommiteeUserDetailResponse, error)
	GetCommiteeUserDetail(context.Context, *GetCommiteeUserDetailRequest) (*GetCommiteeUserDetailResponse, error)
	UpdateCommiteeUserDetail(context.Context, *UpdateCommiteeUserDetailRequest) (*UpdateCommiteeUserDetailResponse, error)
	DeleteCommiteeUserDetail(context.Context, *DeleteCommiteeUserDetailRequest) (*DeleteCommiteeUserDetailResponse, error)
	GetCommiteeUserDetails(context.Context, *GetCommiteeUserDetailsRequest) (*GetCommiteeUserDetailsResponse, error)
	GetAllCommiteeUserDetailsFromCommitee(context.Context, *GetAllCommiteeUserDetailsFromCommiteeRequest) (*GetAllCommiteeUserDetailsFromCommiteeResponse, error)
	CreateRoom(context.Context, *CreateRoomRequest) (*CreateRoomResponse, error)
	GetRoom(context.Context, *GetRoomRequest) (*GetRoomResponse, error)
	UpdateRoom(context.Context, *UpdateRoomRequest) (*UpdateRoomResponse, error)
	DeleteRoom(context.Context, *DeleteRoomRequest) (*DeleteRoomResponse, error)
	GetRooms(context.Context, *GetRoomsRequest) (*GetRoomsResponse, error)
	mustEmbedUnimplementedCommiteeServiceServer()
}

// UnimplementedCommiteeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCommiteeServiceServer struct {
}

func (UnimplementedCommiteeServiceServer) CreateCommitee(context.Context, *CreateCommiteeRequest) (*CreateCommiteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommitee not implemented")
}
func (UnimplementedCommiteeServiceServer) GetCommitee(context.Context, *GetCommiteeRequest) (*GetCommiteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommitee not implemented")
}
func (UnimplementedCommiteeServiceServer) UpdateCommitee(context.Context, *UpdateCommiteeRequest) (*UpdateCommiteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommitee not implemented")
}
func (UnimplementedCommiteeServiceServer) DeleteCommitee(context.Context, *DeleteCommiteeRequest) (*DeleteCommiteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommitee not implemented")
}
func (UnimplementedCommiteeServiceServer) GetCommitees(context.Context, *GetCommiteesRequest) (*GetCommiteesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommitees not implemented")
}
func (UnimplementedCommiteeServiceServer) CreateCommiteeUserDetail(context.Context, *CreateCommiteeUserDetailRequest) (*CreateCommiteeUserDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommiteeUserDetail not implemented")
}
func (UnimplementedCommiteeServiceServer) GetCommiteeUserDetail(context.Context, *GetCommiteeUserDetailRequest) (*GetCommiteeUserDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommiteeUserDetail not implemented")
}
func (UnimplementedCommiteeServiceServer) UpdateCommiteeUserDetail(context.Context, *UpdateCommiteeUserDetailRequest) (*UpdateCommiteeUserDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommiteeUserDetail not implemented")
}
func (UnimplementedCommiteeServiceServer) DeleteCommiteeUserDetail(context.Context, *DeleteCommiteeUserDetailRequest) (*DeleteCommiteeUserDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommiteeUserDetail not implemented")
}
func (UnimplementedCommiteeServiceServer) GetCommiteeUserDetails(context.Context, *GetCommiteeUserDetailsRequest) (*GetCommiteeUserDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommiteeUserDetails not implemented")
}
func (UnimplementedCommiteeServiceServer) GetAllCommiteeUserDetailsFromCommitee(context.Context, *GetAllCommiteeUserDetailsFromCommiteeRequest) (*GetAllCommiteeUserDetailsFromCommiteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCommiteeUserDetailsFromCommitee not implemented")
}
func (UnimplementedCommiteeServiceServer) CreateRoom(context.Context, *CreateRoomRequest) (*CreateRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (UnimplementedCommiteeServiceServer) GetRoom(context.Context, *GetRoomRequest) (*GetRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoom not implemented")
}
func (UnimplementedCommiteeServiceServer) UpdateRoom(context.Context, *UpdateRoomRequest) (*UpdateRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoom not implemented")
}
func (UnimplementedCommiteeServiceServer) DeleteRoom(context.Context, *DeleteRoomRequest) (*DeleteRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoom not implemented")
}
func (UnimplementedCommiteeServiceServer) GetRooms(context.Context, *GetRoomsRequest) (*GetRoomsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRooms not implemented")
}
func (UnimplementedCommiteeServiceServer) mustEmbedUnimplementedCommiteeServiceServer() {}

// UnsafeCommiteeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CommiteeServiceServer will
// result in compilation errors.
type UnsafeCommiteeServiceServer interface {
	mustEmbedUnimplementedCommiteeServiceServer()
}

func RegisterCommiteeServiceServer(s grpc.ServiceRegistrar, srv CommiteeServiceServer) {
	s.RegisterService(&CommiteeService_ServiceDesc, srv)
}

func _CommiteeService_CreateCommitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommiteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).CreateCommitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_CreateCommitee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).CreateCommitee(ctx, req.(*CreateCommiteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetCommitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommiteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetCommitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetCommitee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetCommitee(ctx, req.(*GetCommiteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_UpdateCommitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommiteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).UpdateCommitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_UpdateCommitee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).UpdateCommitee(ctx, req.(*UpdateCommiteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_DeleteCommitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommiteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).DeleteCommitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_DeleteCommitee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).DeleteCommitee(ctx, req.(*DeleteCommiteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetCommitees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommiteesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetCommitees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetCommitees_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetCommitees(ctx, req.(*GetCommiteesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_CreateCommiteeUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommiteeUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).CreateCommiteeUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_CreateCommiteeUserDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).CreateCommiteeUserDetail(ctx, req.(*CreateCommiteeUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetCommiteeUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommiteeUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetCommiteeUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetCommiteeUserDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetCommiteeUserDetail(ctx, req.(*GetCommiteeUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_UpdateCommiteeUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommiteeUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).UpdateCommiteeUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_UpdateCommiteeUserDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).UpdateCommiteeUserDetail(ctx, req.(*UpdateCommiteeUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_DeleteCommiteeUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommiteeUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).DeleteCommiteeUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_DeleteCommiteeUserDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).DeleteCommiteeUserDetail(ctx, req.(*DeleteCommiteeUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetCommiteeUserDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommiteeUserDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetCommiteeUserDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetCommiteeUserDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetCommiteeUserDetails(ctx, req.(*GetCommiteeUserDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetAllCommiteeUserDetailsFromCommitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCommiteeUserDetailsFromCommiteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetAllCommiteeUserDetailsFromCommitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetAllCommiteeUserDetailsFromCommitee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetAllCommiteeUserDetailsFromCommitee(ctx, req.(*GetAllCommiteeUserDetailsFromCommiteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_CreateRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).CreateRoom(ctx, req.(*CreateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetRoom(ctx, req.(*GetRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_UpdateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).UpdateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_UpdateRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).UpdateRoom(ctx, req.(*UpdateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_DeleteRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).DeleteRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_DeleteRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).DeleteRoom(ctx, req.(*DeleteRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommiteeService_GetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommiteeServiceServer).GetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CommiteeService_GetRooms_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommiteeServiceServer).GetRooms(ctx, req.(*GetRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CommiteeService_ServiceDesc is the grpc.ServiceDesc for CommiteeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CommiteeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "commitee.v1.CommiteeService",
	HandlerType: (*CommiteeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCommitee",
			Handler:    _CommiteeService_CreateCommitee_Handler,
		},
		{
			MethodName: "GetCommitee",
			Handler:    _CommiteeService_GetCommitee_Handler,
		},
		{
			MethodName: "UpdateCommitee",
			Handler:    _CommiteeService_UpdateCommitee_Handler,
		},
		{
			MethodName: "DeleteCommitee",
			Handler:    _CommiteeService_DeleteCommitee_Handler,
		},
		{
			MethodName: "GetCommitees",
			Handler:    _CommiteeService_GetCommitees_Handler,
		},
		{
			MethodName: "CreateCommiteeUserDetail",
			Handler:    _CommiteeService_CreateCommiteeUserDetail_Handler,
		},
		{
			MethodName: "GetCommiteeUserDetail",
			Handler:    _CommiteeService_GetCommiteeUserDetail_Handler,
		},
		{
			MethodName: "UpdateCommiteeUserDetail",
			Handler:    _CommiteeService_UpdateCommiteeUserDetail_Handler,
		},
		{
			MethodName: "DeleteCommiteeUserDetail",
			Handler:    _CommiteeService_DeleteCommiteeUserDetail_Handler,
		},
		{
			MethodName: "GetCommiteeUserDetails",
			Handler:    _CommiteeService_GetCommiteeUserDetails_Handler,
		},
		{
			MethodName: "GetAllCommiteeUserDetailsFromCommitee",
			Handler:    _CommiteeService_GetAllCommiteeUserDetailsFromCommitee_Handler,
		},
		{
			MethodName: "CreateRoom",
			Handler:    _CommiteeService_CreateRoom_Handler,
		},
		{
			MethodName: "GetRoom",
			Handler:    _CommiteeService_GetRoom_Handler,
		},
		{
			MethodName: "UpdateRoom",
			Handler:    _CommiteeService_UpdateRoom_Handler,
		},
		{
			MethodName: "DeleteRoom",
			Handler:    _CommiteeService_DeleteRoom_Handler,
		},
		{
			MethodName: "GetRooms",
			Handler:    _CommiteeService_GetRooms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thesis_commitee.proto",
}
