version: '3.9'

services:
  classroom-db:
    image: postgres:alpine
    container_name: classroom-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: thesis_management_classrooms
    ports:
      - "5433:5432"
    volumes:
      - classroom-db:/var/lib/postgresql/data
      - ./script/classroom/init-database-classroom.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  post-db:
    image: postgres:alpine
    container_name: post-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_posts
    ports:
      - "5434:5432"
    volumes:
      - post-db:/var/lib/postgresql/data
      - ./script/post/init-database-post.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway" 

  exercise-db:
    image: postgres:alpine
    container_name: exercise-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_exercises
    ports:
      - "5435:5432"
    volumes:
      - exercise-db:/var/lib/postgresql/data
      - ./script/exercise/init-database-exercise.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  user-db:
    image: postgres:alpine
    container_name: user-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_users
    ports:
      - "5436:5432"
    volumes:
      - user-db:/var/lib/postgresql/data
      - ./script/user/init-database-user.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  reporting-stage-db:
    image: postgres:alpine
    container_name: reporting-stage-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_reporting_stages
    ports:
      - "5437:5432"
    volumes:
      - reporting-stage-db:/var/lib/postgresql/data
      - ./script/reporting-stage/init-database-reporting-stage.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  submission-db:
    image: postgres:alpine
    container_name: submission-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_submissions
    ports:
      - "5438:5432"
    volumes:
      - submission-db:/var/lib/postgresql/data
      - ./script/submission/init-database-submission.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  classroom-waiting-list-db:
    image: postgres:alpine
    container_name: classroom-waiting-list-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_waiting_lists
    ports:
      - "5439:5432"
    volumes:
      - classroom-waiting-list-db:/var/lib/postgresql/data
      - ./script/waiting-list/init-database-waiting-list.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  comment-db:
    image: postgres:alpine
    container_name: comment-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_comments
    ports:
      - "5440:5432"
    volumes:
      - comment-db:/var/lib/postgresql/data
      - ./script/comment/init-database-comment.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  attachment-db:
    image: postgres:alpine
    container_name: attachment-db
    networks:
      mynet:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: thesis_management_attachments
    ports:
      - "5441:5432"
    volumes:
      - attachment-db:/var/lib/postgresql/data
      - ./script/attachment/init-database-attachment.sql:/docker-entrypoint-initdb.d/init-database.sql
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  api:
    build:
      dockerfile: ./api-gw/Dockerfile
      context: .
      args:
        - image_name=apigw
    image: qthuy2k1/thesis-management-backend
    networks:
      mynet:
    ports:
      - "9091:9091"
    links:
      - classroom
      - post
      - exercise
      - user
      - reporting-stage
      - submission
    volumes:
      - .:/usr/src/app
    depends_on:
      - classroom-db
      - post-db
      - exercise-db
      - user-db
      - reporting-stage-db
      - submission-db
      - classroom-waiting-list-db
      - comment-db
      - attachment-db

  classroom:
    build:
      dockerfile: ./classroom-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-classroom
    networks:
      mynet:
    depends_on:
      - classroom-db
    volumes:
      - .:/usr/src/app

  post:
    build:
      dockerfile: ./post-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-post
    networks:
      mynet:
    depends_on:
      - post-db
    volumes:
      - .:/usr/src/app

  exercise:
    build:
      dockerfile: ./exercise-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-exercise
    networks:
      mynet:
    depends_on:
      - exercise-db
    volumes:
      - .:/usr/src/app
    
  user:
    env_file:
      - .env
    build:
      dockerfile: ./user-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-user
    networks:
      mynet:
    depends_on:
      - user-db
    volumes:
      - .:/usr/src/app

  reporting-stage:
    env_file:
      - .env
    build:
      dockerfile: ./reporting-stage-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-reporting-stage
    networks:
      mynet:
    depends_on:
      - reporting-stage-db
    volumes:
      - .:/usr/src/app

  submission:
    env_file:
      - .env
    build:
      dockerfile: ./submission-svc/Dockerfile
      context: .
      args:
        - image_name=submission
    image: qthuy2k1/thesis-management-backend-submission
    networks:
      mynet:
    depends_on:
      - submission-db
    volumes:
      - .:/usr/src/app

  classroom-waiting-list:
    env_file:
      - .env
    build:
      dockerfile: ./classroom-waiting-list-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-classroom-waiting-list
    networks:
      mynet:
    depends_on:
      - classroom-waiting-list-db
    volumes:
      - .:/usr/src/app

  comment:
    env_file:
      - .env
    build:
      dockerfile: ./comment-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-comment
    networks:
      mynet:
    depends_on:
      - comment-db
    volumes:
      - .:/usr/src/app

  attachment:
    env_file:
      - .env
    build:
      dockerfile: ./attachment-svc/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-attachment
    networks:
      mynet:
    depends_on:
      - attachment-db
    volumes:
      - .:/usr/src/app
    
  apigw-client:
    build:
      dockerfile: ./apigw-client/Dockerfile
      context: .
    image: qthuy2k1/thesis-management-backend-apigw-client
    networks:
      mynet:
    depends_on:
      - api
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/app
    links:
      - api
      - classroom
      - post
      - user
      - reporting-stage
      - submission
      - classroom-waiting-list
      - comment
      - attachment

volumes:
  classroom-db:
  post-db:
  exercise-db:
  user-db:
  reporting-stage-db:
  submission-db:
  classroom-waiting-list-db:
  comment-db:
  attachment-db:
networks:
  mynet: