syntax = "proto3";

package topic.v1;

option go_package="github.com/qthuy2k1/thesis-management-backend/topic/api/v1";

service TopicService {
    rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse){}
    
    rpc GetTopic(GetTopicRequest) returns (GetTopicResponse){}

    rpc GetTopicFromUser(GetTopicFromUserRequest) returns (GetTopicFromUserResponse){}

    rpc UpdateTopic(UpdateTopicRequest) returns (UpdateTopicResponse){}

    rpc DeleteTopic(DeleteTopicRequest) returns (DeleteTopicResponse){}
    
    rpc GetTopics(GetTopicsRequest) returns (GetTopicsResponse){}

    rpc GetAllTopicsOfListUser(GetAllTopicsOfListUserRequest) returns (GetAllTopicsOfListUserResponse){}
}


message CommonTopicResponse {
    int64 statusCode = 1;
    string message = 2;
}

// ====== POST ======
message TopicInput {
    string title = 1;
    string typeTopic = 2;
    int64 memberQuantity = 3;
    string studentID = 4;
    string memberEmail = 5;
    string description = 6;
}


message TopicResponse {
    int64 id = 1;
    string title = 2;
    string typeTopic = 3;
    int64 memberQuantity = 4;
    string studentID = 5;
    string memberEmail = 6;
    string description = 7;
}


message CreateTopicRequest {
   TopicInput topic = 1;
}

message CreateTopicResponse {
    CommonTopicResponse response = 1;
}


// ====== GET ======
message GetTopicRequest {
    int64 id = 1;
}

message GetTopicResponse {
    CommonTopicResponse response = 1;
    TopicResponse topic = 2;
} 

message CheckTopicExistsRequest {
    int64 topicID = 1;
}

message CheckTopicExistsResponse {
    bool exists = 1;
}


// ====== PUT ======
message UpdateTopicRequest {
    int64 id = 1;
    TopicInput topic = 2;
}

message UpdateTopicResponse {
    CommonTopicResponse response = 1;
}

// ====== DELETE ======
message DeleteTopicRequest {
    int64 id = 1;
}

message DeleteTopicResponse {
    CommonTopicResponse response = 1;
}

message GetTopicsRequest {

}

message GetTopicsResponse {
    CommonTopicResponse response = 1;
    repeated TopicResponse topic = 2;
}



message GetAllTopicsOfListUserRequest {
    repeated string userID = 1;
}

message GetAllTopicsOfListUserResponse {
    CommonTopicResponse response = 1;
    repeated TopicResponse topic = 2;
}

message GetTopicFromUserRequest {
    string userID = 1;
}

message GetTopicFromUserResponse {
    CommonTopicResponse response = 1;
    TopicResponse topic = 2;
}