apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-database-user-configmap
data:
  init-database-user.sql: |
    CREATE DATABASE "thesis_management_users"

---
#For creating Kubernetes StatefulSet in the Minikube cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thesis-management-backend-user-db
  labels:
    app: thesis-management-backend-user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thesis-management-backend-user-db
  template:
    metadata:
      labels:
        app: thesis-management-backend-user-db 
    spec:
      containers:
      - name: thesis-management-backend-user-db
        image: qthuy2k1/thesis-management-backend-user-db
        env:
        - name: POSTGRES_PASSWORD
          value: "root"
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        volumeMounts:
          - name: user-db
            mountPath: /var/lib/postgresql/data
          - name: init-database-script
            mountPath: /docker-entrypoint-initdb.d/init-database-user.sql
            subPath: init-database-user.sql
      volumes:
        - name: user-db
          persistentVolumeClaim:
            claimName: user-db-pvc
        - name: init-database-script
          configMap:
            name: init-database-user-configmap
      
        

---
#For creating a Kubernetes Service in the Minikube cluster
apiVersion: v1
kind: Service
metadata:
  name: thesis-management-backend-user-db-service
spec:
  selector:
    app: thesis-management-backend-user-db 
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432